// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure.Management.Compute;
using Microsoft.Azure.Management.Compute.Models;

namespace Microsoft.Azure.Management.Compute
{
    /// <summary>
    /// The Compute Management Client.
    /// </summary>
    public static partial class VirtualMachineScaleSetVMOperationsExtensions
    {
        /// <summary>
        /// The operation to deallocate a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static ComputeOperationResponse BeginDeallocating(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineScaleSetVMOperations)s).BeginDeallocatingAsync(resourceGroupName, vmScaleSetName, instanceId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to deallocate a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static Task<ComputeOperationResponse> BeginDeallocatingAsync(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return operations.BeginDeallocatingAsync(resourceGroupName, vmScaleSetName, instanceId, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to delete a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static DeleteOperationResponse BeginDeleting(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineScaleSetVMOperations)s).BeginDeletingAsync(resourceGroupName, vmScaleSetName, instanceId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to delete a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static Task<DeleteOperationResponse> BeginDeletingAsync(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return operations.BeginDeletingAsync(resourceGroupName, vmScaleSetName, instanceId, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to power off (stop) a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static ComputeOperationResponse BeginPoweringOff(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineScaleSetVMOperations)s).BeginPoweringOffAsync(resourceGroupName, vmScaleSetName, instanceId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to power off (stop) a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static Task<ComputeOperationResponse> BeginPoweringOffAsync(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return operations.BeginPoweringOffAsync(resourceGroupName, vmScaleSetName, instanceId, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to restart a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static ComputeOperationResponse BeginRestarting(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineScaleSetVMOperations)s).BeginRestartingAsync(resourceGroupName, vmScaleSetName, instanceId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to restart a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static Task<ComputeOperationResponse> BeginRestartingAsync(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return operations.BeginRestartingAsync(resourceGroupName, vmScaleSetName, instanceId, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to start a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static ComputeOperationResponse BeginStarting(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineScaleSetVMOperations)s).BeginStartingAsync(resourceGroupName, vmScaleSetName, instanceId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to start a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static Task<ComputeOperationResponse> BeginStartingAsync(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return operations.BeginStartingAsync(resourceGroupName, vmScaleSetName, instanceId, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to deallocate a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The Compute service response for long-running operations.
        /// </returns>
        public static ComputeLongRunningOperationResponse Deallocate(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineScaleSetVMOperations)s).DeallocateAsync(resourceGroupName, vmScaleSetName, instanceId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to deallocate a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The Compute service response for long-running operations.
        /// </returns>
        public static Task<ComputeLongRunningOperationResponse> DeallocateAsync(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return operations.DeallocateAsync(resourceGroupName, vmScaleSetName, instanceId, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to delete a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static DeleteOperationResponse Delete(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineScaleSetVMOperations)s).DeleteAsync(resourceGroupName, vmScaleSetName, instanceId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to delete a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The compute long running operation response.
        /// </returns>
        public static Task<DeleteOperationResponse> DeleteAsync(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return operations.DeleteAsync(resourceGroupName, vmScaleSetName, instanceId, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to get a virtual machine scale set virtual machine.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The GetVirtualMachineScaleSetVM operation response.
        /// </returns>
        public static VirtualMachineScaleSetVMGetResponse Get(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineScaleSetVMOperations)s).GetAsync(resourceGroupName, vmScaleSetName, instanceId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to get a virtual machine scale set virtual machine.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The GetVirtualMachineScaleSetVM operation response.
        /// </returns>
        public static Task<VirtualMachineScaleSetVMGetResponse> GetAsync(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return operations.GetAsync(resourceGroupName, vmScaleSetName, instanceId, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to get a virtual machine scale set virtual machine.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The get VirtualMachineScaleSetVM instance view operation response.
        /// </returns>
        public static VirtualMachineScaleSetVMGetInstanceViewResponse GetInstanceView(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineScaleSetVMOperations)s).GetInstanceViewAsync(resourceGroupName, vmScaleSetName, instanceId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to get a virtual machine scale set virtual machine.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The get VirtualMachineScaleSetVM instance view operation response.
        /// </returns>
        public static Task<VirtualMachineScaleSetVMGetInstanceViewResponse> GetInstanceViewAsync(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return operations.GetInstanceViewAsync(resourceGroupName, vmScaleSetName, instanceId, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to list virtual machine scale sets VMs.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='parameters'>
        /// Optional.
        /// </param>
        /// <returns>
        /// The List Virtual Machine Scale Set VMs operation response.
        /// </returns>
        public static VirtualMachineScaleSetVMListResponse List(this IVirtualMachineScaleSetVMOperations operations, VirtualMachineScaleSetVMListParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineScaleSetVMOperations)s).ListAsync(parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to list virtual machine scale sets VMs.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='parameters'>
        /// Optional.
        /// </param>
        /// <returns>
        /// The List Virtual Machine Scale Set VMs operation response.
        /// </returns>
        public static Task<VirtualMachineScaleSetVMListResponse> ListAsync(this IVirtualMachineScaleSetVMOperations operations, VirtualMachineScaleSetVMListParameters parameters)
        {
            return operations.ListAsync(parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to power off (stop) a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The Compute service response for long-running operations.
        /// </returns>
        public static ComputeLongRunningOperationResponse PowerOff(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineScaleSetVMOperations)s).PowerOffAsync(resourceGroupName, vmScaleSetName, instanceId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to power off (stop) a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The Compute service response for long-running operations.
        /// </returns>
        public static Task<ComputeLongRunningOperationResponse> PowerOffAsync(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return operations.PowerOffAsync(resourceGroupName, vmScaleSetName, instanceId, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to restart a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The Compute service response for long-running operations.
        /// </returns>
        public static ComputeLongRunningOperationResponse Restart(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineScaleSetVMOperations)s).RestartAsync(resourceGroupName, vmScaleSetName, instanceId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to restart a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The Compute service response for long-running operations.
        /// </returns>
        public static Task<ComputeLongRunningOperationResponse> RestartAsync(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return operations.RestartAsync(resourceGroupName, vmScaleSetName, instanceId, CancellationToken.None);
        }
        
        /// <summary>
        /// The operation to start a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The Compute service response for long-running operations.
        /// </returns>
        public static ComputeLongRunningOperationResponse Start(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IVirtualMachineScaleSetVMOperations)s).StartAsync(resourceGroupName, vmScaleSetName, instanceId);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// The operation to start a virtual machine scale set.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.Azure.Management.Compute.IVirtualMachineScaleSetVMOperations.
        /// </param>
        /// <param name='resourceGroupName'>
        /// Required. The name of the resource group.
        /// </param>
        /// <param name='vmScaleSetName'>
        /// Required. The name of the virtual machine scale set.
        /// </param>
        /// <param name='instanceId'>
        /// Required. The instance id of the virtual machine.
        /// </param>
        /// <returns>
        /// The Compute service response for long-running operations.
        /// </returns>
        public static Task<ComputeLongRunningOperationResponse> StartAsync(this IVirtualMachineScaleSetVMOperations operations, string resourceGroupName, string vmScaleSetName, string instanceId)
        {
            return operations.StartAsync(resourceGroupName, vmScaleSetName, instanceId, CancellationToken.None);
        }
    }
}
